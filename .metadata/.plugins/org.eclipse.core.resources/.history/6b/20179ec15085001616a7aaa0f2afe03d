import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.TransferHandler;



public class ButtonHandler {
	public JPanel subcontentPane;
	public JScrollPane scrollPane;
	
	JComboBox boxRoom[] = new JComboBox[10];
    JButton btn[] = new JButton[10];
    JLabel lblTeacher[] = new JLabel[10];
	
	public void ButtonHandler(){
	}
	
	public void SubPanelCreator(){
		
		//SubcontentPane
		subcontentPane = new JPanel();
		subcontentPane.setLayout(null);
		subcontentPane.setPreferredSize(new Dimension(1700,1600));
		
		//ScrollPane
		scrollPane = new JScrollPane();;
        scrollPane.setViewportView(subcontentPane);
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        scrollPane.setBounds(160, 30, 1200, 650);
        
        
        
        CreateButton();        
        
	}
	public void CreateButton(){
		int pos=0;
        for(int i=1;i<=7;i++)
        {
        	boxRoom[i] = new JComboBox();
            boxRoom[i].addItem("Com.Lab");
    		boxRoom[i].setBounds(pos+5, 5, 70, 25);
    		subcontentPane.add(boxRoom[i]);
            
            btn[i] = new JButton("XXX-"+i);
            btn[i].setBounds(pos+80, 5, 100, 25);
            btn[i].setTransferHandler(new ValueImportTransferHandler());
            subcontentPane.add(btn[i]);
            
            
            lblTeacher[i] = new JLabel("TTT");
    		lblTeacher[i].setFont(new Font("Tahoma",Font.PLAIN,14));
    		lblTeacher[i].setBounds(pos+185,5,35,25);
    		subcontentPane.add(lblTeacher[i]);
        	pos+=240;
        }
	}
	
	public static class ValueImportTransferHandler extends TransferHandler {

        public static final DataFlavor SUPPORTED_DATE_FLAVOR = DataFlavor.stringFlavor;

        public ValueImportTransferHandler() {
        }

        @Override
        public boolean canImport(TransferHandler.TransferSupport support) {
        	
        	return support.isDataFlavorSupported(SUPPORTED_DATE_FLAVOR);
            
        }

        @Override
        public boolean importData(TransferHandler.TransferSupport support) {
            boolean accept = false;
            if (canImport(support)) {
                try {
                    Transferable t = support.getTransferable();
                    Object value = t.getTransferData(SUPPORTED_DATE_FLAVOR);
                    if (value instanceof String) {
                        Component component = support.getComponent();
                        if (component instanceof JButton) {
                            ((JButton) component).setText(value.toString());
                            accept = true;
                        }
                    }
                } catch (Exception exp) {
                    exp.printStackTrace();
                }
            }
            return accept;
        }
    }



}
